# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CypherPlaygroundGUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from Info import Info


class UiForm(object):
    def __init__(self, form):
        self.info = Info()
        """Establish self variables and ratios"""
        # Forming initial ratios
        self.width_ratio = 1
        self.height_ratio = 1
        # Establishing base widgets
        self.jumpers = QtWidgets.QComboBox(form)
        self.mainInfo = QtWidgets.QPlainTextEdit(form)
        self.secondInfo = QtWidgets.QPlainTextEdit(form)
        self.jumps = QtWidgets.QListWidget(form)
        self.choices = QtWidgets.QListWidget(form)
        self.jumpCP = QtWidgets.QLineEdit(form)
        self.choiceCP = QtWidgets.QLineEdit(form)
        self.chained = QtWidgets.QCheckBox(form)
        self.active = QtWidgets.QCheckBox(form)

    def ratio_alter(self, x, y, width, height):
        """Return coordinates and dimensions altered by the form size"""
        alter_x = self.width_ratio * x
        alter_y = self.height_ratio * y
        alter_width = self.width_ratio * width
        alter_height = self.height_ratio * height
        return QtCore.QRect(alter_x, alter_y, alter_width, alter_height)

    def setup_ui(self, form):
        """Establish GUI components, specialities and connections"""
        def setup_widget(self_name, geometry, name):
            """Call functions based on self_name, geometry and name"""
            self_name.setGeometry(geometry)
            self_name.setObjectName(name)
        # Creating the form
        form.setObjectName("Form")
        form.resize(1000, 750)
        # Altering the ratios
        self.width_ratio = form.width() / 565
        self.height_ratio = form.height() / 399
        # Creating the widgets
        setup_widget(self.jumpers, self.ratio_alter(20, 10, 131, 14), 'jumpers')
        setup_widget(self.jumps, self.ratio_alter(20, 34, 131, 340), 'jumps')
        setup_widget(self.choices, self.ratio_alter(20, 34, 131, 340), 'choices')
        setup_widget(self.jumpCP, self.ratio_alter(169, 10, 75, 14), 'jumpCP')
        setup_widget(self.choiceCP, self.ratio_alter(466, 10, 75, 14), 'choiceCP')
        setup_widget(self.chained, self.ratio_alter(169, 27, 75, 14), 'chained')
        setup_widget(self.active, self.ratio_alter(466, 27, 75, 14), 'active')
        setup_widget(self.mainInfo, self.ratio_alter(169, 44, 372, 230), 'mainInfo')
        setup_widget(self.secondInfo, self.ratio_alter(169, 284, 372, 90), 'secondInfo')
        # Adding text to lists
        for i in range(len(self.info.jumpers)):
            self.jumpers.addItem(self.info.jumpers[i])
        for i in range(len(self.info.jumps)):
            self.jumps.addItem(self.info.jumps[i])
        self.jumps.clicked.connect(self.clickedJump)

    def clickedJump(self):
        item = self.jumps.currentItem()
        jump = self.info.getJump(item.text())


