# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CypherPlaygroundGUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from Info import Info


class UiForm(object):
    def __init__(self, form):
        self.info = Info()
        """Establish self variables and ratios"""
        # Forming initial ratios
        self.width_ratio = 1
        self.height_ratio = 1
        # Establishing base widgets
        self.jumpers = QtWidgets.QComboBox(form)
        self.mainInfo = QtWidgets.QPlainTextEdit(form)
        self.secondInfo = QtWidgets.QPlainTextEdit(form)
        self.jumps = QtWidgets.QListWidget(form)
        self.choices = QtWidgets.QListWidget(form)
        self.jumpCP = QtWidgets.QLineEdit(form)
        self.choiceCP = QtWidgets.QLineEdit(form)
        self.choiceType = QtWidgets.QComboBox(form)
        self.chained = QtWidgets.QCheckBox(form)
        self.active = QtWidgets.QCheckBox(form)
        self.changeType = QtWidgets.QComboBox(form)
        self.jumpName = QtWidgets.QLineEdit(form)
        self.choiceName = QtWidgets.QLineEdit(form)

    def ratio_alter(self, x, y, width, height):
        """Return coordinates and dimensions altered by the form size"""
        alter_x = self.width_ratio * x
        alter_y = self.height_ratio * y
        alter_width = self.width_ratio * width
        alter_height = self.height_ratio * height
        return QtCore.QRect(alter_x, alter_y, alter_width, alter_height)

    def setup_ui(self, form):
        """Establish GUI components, specialities and connections"""
        def setup_widget(self_name, geometry, name):
            """Call functions based on self_name, geometry and name"""
            self_name.setGeometry(geometry)
            self_name.setObjectName(name)
        # Creating the form
        form.setObjectName("Form")
        form.resize(1000, 750)
        # Altering the ratios
        self.width_ratio = form.width() / 565
        self.height_ratio = form.height() / 399
        # Creating the widgets
        setup_widget(self.jumpers, self.ratio_alter(10, 10, 75, 14), 'jumpers')

        setup_widget(self.jumps, self.ratio_alter(10, 29, 75, 335.5), 'jumps')
        setup_widget(self.jumpName, self.ratio_alter(170, 29, 125, 14), 'jumpName')
        setup_widget(self.jumpCP, self.ratio_alter(170, 10, 75, 14), 'jumpCP')

        setup_widget(self.changeType, self.ratio_alter(90, 10, 75, 14), 'changeType')

        setup_widget(self.choices, self.ratio_alter(90, 29, 75, 335.5), 'choices')
        setup_widget(self.choiceName, self.ratio_alter(300, 29, 252, 14), 'choiceName')
        setup_widget(self.choiceCP, self.ratio_alter(477, 10, 75, 14), 'choiceCP')
        setup_widget(self.choiceType, self.ratio_alter(250, 10, 150, 14), 'choiceType')

        setup_widget(self.active, self.ratio_alter(405, 10, 50, 14), 'active')
        setup_widget(self.chained, self.ratio_alter(435, 10, 50, 14), 'chained')

        setup_widget(self.mainInfo, self.ratio_alter(170, 48, 382, 221), 'mainInfo')
        setup_widget(self.secondInfo, self.ratio_alter(170, 274, 382, 90), 'secondInfo')
        # Adding text to lists
        self.jumpers.addItems(self.info.jumpers)
        self.jumps.addItems(self.info.jumps)
        self.changeType.addItems(['Add Jump', 'Add Choice', 'Rename Jump'])
        self.choiceType.addItems(['Origin', 'Perk', 'Item', 'Companion', 'Drawback', 'Scenario', 'Other'])
        # Adding text to others
        self.active.setText("Active")
        self.chained.setText("Chained")
        # Connecting to the different lists
        self.jumpers.currentIndexChanged.connect(self.clickedJumper)
        self.jumps.clicked.connect(self.clickedJump)
        self.changeType.currentIndexChanged.connect(self.clickedChangeType)

    def clickedJumper(self):
        self.jumps.clear()
        self.info.getJumper(self.jumpers.currentText())
        self.jumps.addItems(self.info.jumps)

    def clickedJump(self):
        item = self.jumps.currentItem()
        self.info.getJump(item.text())
        self.info.getJumpOptions()

    def clickedChangeButton(self):
        self.info.addJump()
        self.jumps.setCurrentItem(self.jumps[-1])

    def clickedChangeType(self):
        text = self.changeType.currentText()
        if text == 'Add Jump':
            self.info.addJump()
        if text == 'Add Choice':
            self.info.addChoice()
        if text == 'Rename Jump' and self.jumpName != '':
            self.info.renameJump(self.jumpName)

